// <auto-generated />
using AsyncInn.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsyncInn.Migrations
{
    [DbContext(typeof(AsyncInnDbContext))]
    [Migration("20190204011954_RoomAmenitiesDelete")]
    partial class RoomAmenitiesDelete
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsyncInn.Models.Amenities", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Air Conditioning"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Kitchenette"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Jacuzzi Tub"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Balcony"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Office"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.Hotel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("StreetAddress")
                        .IsRequired();

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("ID");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            City = "Seattle",
                            Name = "Downtown Seattle",
                            Phone = "(206) 555-1234",
                            State = "WA",
                            StreetAddress = "123 1st Ave S",
                            ZipCode = "98101"
                        },
                        new
                        {
                            ID = 2,
                            City = "Seattle",
                            Name = "Ballard",
                            Phone = "(206) 555-5678",
                            State = "WA",
                            StreetAddress = "1 Main St",
                            ZipCode = "98107"
                        },
                        new
                        {
                            ID = 3,
                            City = "Renton",
                            Name = "Downtown Renton",
                            Phone = "(425) 555-1234",
                            State = "WA",
                            StreetAddress = "1234 Rainier Ave S",
                            ZipCode = "98057"
                        },
                        new
                        {
                            ID = 4,
                            City = "Bellevue",
                            Name = "Bellevue Square",
                            Phone = "(425) 555-5678",
                            State = "WA",
                            StreetAddress = "1 Bellevue Square",
                            ZipCode = "98004"
                        },
                        new
                        {
                            ID = 5,
                            City = "Everett",
                            Name = "Everett",
                            Phone = "(360) 555-1234",
                            State = "WA",
                            StreetAddress = "3 Everett Way",
                            ZipCode = "98206"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.HotelRoom", b =>
                {
                    b.Property<int>("HotelID");

                    b.Property<int>("RoomID");

                    b.Property<bool>("PetFriendly");

                    b.Property<decimal>("Rate");

                    b.Property<int>("RoomNumber");

                    b.HasKey("HotelID", "RoomID");

                    b.HasIndex("RoomID");

                    b.ToTable("HotelRooms");
                });

            modelBuilder.Entity("AsyncInn.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Layout");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Layout = 0,
                            Name = "Standard Studio"
                        },
                        new
                        {
                            ID = 2,
                            Layout = 1,
                            Name = "Standard One Bedroom"
                        },
                        new
                        {
                            ID = 3,
                            Layout = 2,
                            Name = "Standard Two Bedroom"
                        },
                        new
                        {
                            ID = 4,
                            Layout = 0,
                            Name = "Pet Friendly Studio"
                        },
                        new
                        {
                            ID = 5,
                            Layout = 1,
                            Name = "Pet Friendly One Bedroom"
                        },
                        new
                        {
                            ID = 6,
                            Layout = 2,
                            Name = "Pet Friendly Two Bedroom"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.RoomAmenities", b =>
                {
                    b.Property<int>("AmenitiesID");

                    b.Property<int>("RoomID");

                    b.HasKey("AmenitiesID", "RoomID");

                    b.HasIndex("AmenitiesID")
                        .IsUnique();

                    b.HasIndex("RoomID");

                    b.ToTable("RoomAmenities");
                });

            modelBuilder.Entity("AsyncInn.Models.HotelRoom", b =>
                {
                    b.HasOne("AsyncInn.Models.Hotel", "Hotel")
                        .WithMany("HotelRooms")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AsyncInn.Models.Room", "Room")
                        .WithMany("HotelRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AsyncInn.Models.RoomAmenities", b =>
                {
                    b.HasOne("AsyncInn.Models.Amenities", "Amenities")
                        .WithOne("RoomAmenities")
                        .HasForeignKey("AsyncInn.Models.RoomAmenities", "AmenitiesID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AsyncInn.Models.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
